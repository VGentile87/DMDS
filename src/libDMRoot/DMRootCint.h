/********************************************************************
* DMRootCint.h
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************************/
#ifdef __CINT__
#error DMRootCint.h/C is only for compilation. Abort cint.
#endif
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#define G__ANSIHEADER
#define G__DICTIONARY
#define G__PRIVATE_GVALUE
#include "G__ci.h"
#include "FastAllocString.h"
extern "C" {
extern void G__cpp_setup_tagtableDMRootCint();
extern void G__cpp_setup_inheritanceDMRootCint();
extern void G__cpp_setup_typetableDMRootCint();
extern void G__cpp_setup_memvarDMRootCint();
extern void G__cpp_setup_globalDMRootCint();
extern void G__cpp_setup_memfuncDMRootCint();
extern void G__cpp_setup_funcDMRootCint();
extern void G__set_cpp_environmentDMRootCint();
}


#include "TObject.h"
#include "TMemberInspector.h"
#include "DMRAffine2D.h"
#include "DMRCluster.h"
#include "DMRGrain.h"
#include "DMRImage.h"
#include "DMRMicrotrack.h"
#include "DMRView.h"
#include "DMRViewHeader.h"
#include "DMRRun.h"
#include "DMRRunHeader.h"
#include "DMRLog.h"
#include "DMRTextFile.h"
#include "DMRFiducial.h"
#include <algorithm>
namespace std { }
using namespace std;

#ifndef G__MEMFUNCBODY
#endif

extern G__linked_taginfo G__DMRootCintLN_TClass;
extern G__linked_taginfo G__DMRootCintLN_TBuffer;
extern G__linked_taginfo G__DMRootCintLN_TMemberInspector;
extern G__linked_taginfo G__DMRootCintLN_TObject;
extern G__linked_taginfo G__DMRootCintLN_TString;
extern G__linked_taginfo G__DMRootCintLN_string;
extern G__linked_taginfo G__DMRootCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR;
extern G__linked_taginfo G__DMRootCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__DMRootCintLN_va_list;
extern G__linked_taginfo G__DMRootCintLN_TObjArray;
extern G__linked_taginfo G__DMRootCintLN_TClonesArray;
extern G__linked_taginfo G__DMRootCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR;
extern G__linked_taginfo G__DMRootCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__DMRootCintLN_DMRAffine2D;
extern G__linked_taginfo G__DMRootCintLN_DMRCluster;
extern G__linked_taginfo G__DMRootCintLN_DMRView;
extern G__linked_taginfo G__DMRootCintLN_DMRClustercLcLdA;
extern G__linked_taginfo G__DMRootCintLN_DMRGrain;
extern G__linked_taginfo G__DMRootCintLN_DMRGraincLcLdA;
extern G__linked_taginfo G__DMRootCintLN_TArrayC;
extern G__linked_taginfo G__DMRootCintLN_TH2F;
extern G__linked_taginfo G__DMRootCintLN_DMRImage;
extern G__linked_taginfo G__DMRootCintLN_DMRImagecLcLdA;
extern G__linked_taginfo G__DMRootCintLN_DMRImageCl;
extern G__linked_taginfo G__DMRootCintLN_DMRFrame;
extern G__linked_taginfo G__DMRootCintLN_DMRFrameRaw;
extern G__linked_taginfo G__DMRootCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR;
extern G__linked_taginfo G__DMRootCintLN_DMRMicrotrack;
extern G__linked_taginfo G__DMRootCintLN_TArrayF;
extern G__linked_taginfo G__DMRootCintLN_DMRViewHeader;
extern G__linked_taginfo G__DMRootCintLN_DMRRun;
extern G__linked_taginfo G__DMRootCintLN_TTree;
extern G__linked_taginfo G__DMRootCintLN_TFile;
extern G__linked_taginfo G__DMRootCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR;
extern G__linked_taginfo G__DMRootCintLN_TDatime;
extern G__linked_taginfo G__DMRootCintLN_DMRRunHeader;
extern G__linked_taginfo G__DMRootCintLN_AlignmentParView;
extern G__linked_taginfo G__DMRootCintLN_AlignmentParFrame;
extern G__linked_taginfo G__DMRootCintLN_DMRTextFile;
extern G__linked_taginfo G__DMRootCintLN_DMRFiducialMark;
extern G__linked_taginfo G__DMRootCintLN_DMRMarksSet;

/* STUB derived class for protected member access */
